services:
  backend:
    build:
      context: ./backend
      dockerfile: ../Docker/dev/Dockerfile.Backend
    container_name: mevn-backend-dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=${PORT}
      - CORS_ORIGIN=${CORS_ORIGIN}
    env_file:
      - ./.env
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "5001:5000"
    depends_on:
      - mongo
      - redis

  frontend:
    build:
      context: ./frontend
      dockerfile: ../Docker/dev/Dockerfile.Frontend
    container_name: mevn-web-dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
    env_file:
      - ./.env
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - ./certs:/certs:ro
    ports:
      - "5173:5173"
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    container_name: mevn-nginx-dev
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Docker/dev/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certs:/certs:ro
    depends_on:
      - frontend
      - backend

  mailcatch:
    image: sj26/mailcatcher:latest
    container_name: mevn-mailcatch-dev
    restart: unless-stopped
    ports:
      - "1080:1080"
      - "1025:1025"
    environment:
      - MAILCATCHER_IP=0.0.0.0

  mongo:
    image: mongo:6.0
    container_name: mevn-mongo-dev
    restart: unless-stopped
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:7-alpine
    container_name: mevn-redis-dev
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  mongo_data:
  redis_data:
